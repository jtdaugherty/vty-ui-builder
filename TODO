
Add support for:

  * Table
  * Limits
  * Fixed
  * Group

- make it impossible to reference focus group entry names which are
  not in the interface corresponding to a focus group (unless they are
  refs in 'common', in which case that is okay!)

- figure out why DTD validation isn't catching some of the attribute
  mistakes I've seen (#REQUIRED attributes are missing and the
  validator does not complain).  HaXml bug?

  Yep, HaXml bug.  Patch submitted.  Turns out multiple attribute
  lists weren't being merged as per the spec, and only the last one
  declared took precedence.  And the last one declared has no required
  attributes, since it's the auto-generated one (all #IMPLIED).
  Whoops!

  Waiting on maintainer to release the fix.

- improve error reporting and reduce number of pathological error
  cases by performing up-front validation and by using more types (too
  many 'error' calls)

  - Use exceptions instead of 'error' in error reporting, handle
    exceptions in higher-level routines

- Use Posn values in error reporting

- Add support for customizing:
  - the name of the collection builder function
  - name of the interface elements data type

- Do validation on names ([a-z0-9']+) in mkName (e.g., names with '-'
  in them will cause compilation failures in the generated source)

- Set an XML namespace in the XML files and require it in the parser.
  Think about how other users of the tool will need to deal with their
  own namespaces.  Also look at best practices for using DTDs as part
  of this change.

- Expose more of the internals of the source generator (VTY imports,
  etc.) which are hard-coded but potentially useful to users

- Make vty-ui-builder able to tell the user which version of vty-ui it
  generates code for (look at cabal file?)

- Add support for typical entity references like &gt;, &lt;, and
  &nbsp; in any text string in the input document

- Add validation test for duplicate interface names

- Support modular interface files (including other files, etc.)

- When adding widgets to focus groups, also store references to the
  wrapper widgets returned by addToFocusGroup in the InterfaceElements