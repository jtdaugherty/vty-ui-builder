
vBox/hBox

  * Support child spacing controls (applies to all generated boxes
    within any vBox / hBox)

  * Support child size policy controls, e.g.,

    <!-- Percentage of top-level box size -->
    <vBox sizing="50%,25%,25%">
      <ch1>...</ch1>
      <ch2>...</ch2>
      <ch3>...</ch3>
    </vBox>

    <!-- Fixed number of rows/columns -->
    <vBox sizing="25,auto,13">
      <ch1>...</ch1>
      <ch2>...</ch2>
      <ch3>...</ch3>
    </vBox>

Add support for:

  * List

    - User needs to specify internal value and widget types for the
      list (annoying)

    - Specifying initial list contents could get ugly, since we can't
      necessarily type-check the values resulting from the child
      elements of a <list>.

  * Table
  * CheckBox (and radio buttons)
  * Limits
  * Fixed
  * Group

- make it possible to define user interface elements once and refer to
  them in multiple places in multiple interfaces (use case: define one
  list, give it two representations as its surrounding interfaces
  change)

- make it impossible to reference focus group entry names which are
  not in the interface corresponding to a focus group

- make refs able to refer to any name in the document even if it has
  not yet been processed! (i.e., whole-document validation in addition
  to per-element validation)

- figure out why DTD validation isn't catching some of the attribute
  mistakes I've seen (#REQUIRED attributes are missing and the
  validator does not complain).  HaXml bug?

  Yep, HaXml bug.  Patch submitted.  Turns out multiple attribute
  lists weren't being merged as per the spec, and only the last one
  declared took precedence.  And the last one declared has no required
  attributes, since it's the auto-generated one (all #IMPLIED).
  Whoops!

- support setting render context information: skin, default attributes

- improve error reporting and reduce number of pathological error
  cases by performing up-front validation and by using more types (too
  many 'error' calls)

- make vty-ui-builder support loading extra DTDs?

- think about ways to unify the API for specifying element source
  generation handlers and validators

- add support for multiple DTD paths
